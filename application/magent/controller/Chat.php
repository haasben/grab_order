<?php

namespace app\magent\controller;

use think\Controller;
use think\Db;
use GatewayClient\Gateway;

class Chat extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //聊天页面 接收订单号
    /**
        1.用户进入房间需要先判断是否是收单人，订单状态是否正确，已支付和已超时的订单，房间自动失效
        2.根据订单号来取房间号，推送消息给这个房间的所有人
        3.增加上传照片的功能，实时收款传送二维码
        4.页面要增加一个确定该笔订单的已收款的按钮，方便收款后的操作

    */
    public function index() {

        $order_id = input('orderId');

        //查询当前订单是否支付是否超时，是否是假订单

        $order_data = Db::table('mch_order')
            ->alias('m')
            ->field('m.*,t.is_clerk')
            ->join('top_account_assets t','t.id = m.pay_type')
            ->where('m.id',$order_id)
            ->find();
        if(empty($order_data)){
            //$this->error('订单不存在','');die;
            echo '<h1>订单不存在</h1>';die;

        }elseif($order_data['type'] !=1032){
            echo '<h1>订单状态错误</h1>';die;
        }elseif($order_data['pay_status'] == 1){
            echo '<h1>订单已付款，请勿重复支付</h1>';die;
        }

        $user_data = session('login_user','','magent');
        if(!empty($user_data)){
            $username = '客户'.$order_id;
            $uid = $user_data['id'];
            $is_kefu = 1;
        }else{
            
          	$username = '客服'.$user_data['id'];
             $uid = 'o'.$order_id;
              $is_kefu = 2;
        }
        $data = Db::table('content')->where('group_id',$order_id)->limit(100)->select();

        $group_id = $order_id;

        $data = [
            'is_kefu'=>$is_kefu,
            'order_data'=>$order_data,
            'uid'=>$uid,
            'username'=>$username,
            'group_id'=>$group_id,
            'list_data' => $data
        ];

        return $this->fetch('index',$data);
    }

    public function this_ajax(){
        $id = input('get.id');
        $data = Db::table('content')->where('id','>',$id)->select();
        foreach ($data as $key => $value) {
            $data[$key]['ctime'] = date('H:i:s',$value['ctime']);
        }
        if ($data!=null) {
            return $data;
        }
    }

    public function send_message()
    {
        if (!request()->isAjax()) {
            return $this->redirect('magent/Index/index');
        }
        Gateway::$registerAddress = '127.0.0.1:1238';

        $data = input();

        $data['ctime'] = time();
        if(strpos($data['chatcontent'],'/static/arclist') !== false){
            $data['chatcontent'] = htmlspecialchars_decode($data['chatcontent']);
        }

        $magent = session('login_user','','magent');
        // dump($magent);die;
        if(empty($magent)){
            $data['chatname'] = '客户:'.$data['group_id'];
            $data['chatuserid'] = 'o'.$data['group_id'];
        }else{
            $data['chatname'] = '客服:'.$magent['id'];
            $data['chatuserid'] = $magent['id'];
        }

        // dump($data);die;
        $bool = Db::table('content')->insert($data);
        if($bool){
            $data['ctime'] = date('H:i:s',$data['ctime']);
            Gateway::sendToGroup($data['group_id'], json_encode(['type'=>'receive','data'=>$data]));
            return ['code'=>'0000'];
        }else{
            return ['code'=>'1111'];
        }
    }

//上传图片存数据库
    public function upload_img_message()
    {
        if (!request()->isAjax()) {
            return $this->redirect('magent/Index/index');
        }
        Gateway::$registerAddress = '127.0.0.1:1238';

        $data = input();

        $data['ctime'] = time();
        
        $data['chatcontent'] = '<img src='.$data['chatcontent'].' style="width:150px;heigth:150px">';

        $magent = session('login_user','','magent');
        // dump($magent);die;
        if(empty($magent)){
            $data['chatname'] = '客户:'.$data['group_id'];
            $data['chatuserid'] = 'o'.$data['group_id'];
        }else{
            $data['chatname'] = '客服:'.$magent['id'];
            $data['chatuserid'] = $magent['id'];
        }

        // dump($data);die;
        $bool = Db::table('content')->insert($data);
        if($bool){
            $data['ctime'] = date('H:i:s',$data['ctime']);
            Gateway::sendToGroup($data['group_id'], json_encode(['type'=>'receive','data'=>$data]));
            return ['code'=>'0000'];
        }else{
            return ['code'=>'1111'];
        }
    }

    public function upload(){
    // 获取表单上传文件 例如上传了001.jpg
     $fileKey = array_keys(request()->file());
        // 获取表单上传文件 例如上传了001.jpg
     $file = request()->file($fileKey['0']);
    // 移动到框架应用根目录/public/uploads/ 目录下
    $info = $file->validate(['ext'=>'jpg,png,gif,jpeg'])->move(ROOT_PATH . 'public' . DS . 'code'.DS.'pay');
      
      
    if($info){

        $info_name = '/public' . DS . 'code'.DS.'pay'.DS.$info->getSaveName();
        $image = \think\Image::open(ROOT_PATH.$info_name);
        $image->thumb(300,300)->save(ROOT_PATH.$info_name);
      
        $src = '/code/pay'.DS.$info->getSaveName();
        
        $data = json_encode(['code'=>'0000','msg'=>'上传成功','src'=>$src]);

    }else{
        // 上传失败获取错误信息
        $data = json_encode(['code'=>'60003','msg'=>$file->getError()]);
    }
    echo $data;
}

    //补发回调，改变状态
    public function update_status(){

        $id = input('id');
        //先判断该笔订单是否是自己的
        $user_data = session('login_user','','magent');
        if(empty($user_data)){

            return ['code'=>'1111','msg'=>'账号已掉线，请重新登录'];die;
        }
        $uid = $user_data['id'];

        $order_data = Db::table('mch_order')->where('id',$id)
            ->where('proxy_id',$uid)
            ->limit(1)
            ->find();
        if(empty($order_data)){
            return ['code'=>'1111','msg'=>'非法请求'];die;
        }elseif(($order_data['accept_time'] - time()) > 24*60*60){
            return ['code'=>'1111','msg'=>'回调时间超时'];die;
        }

        $msg = file_get_contents(THIS_URL.'/api/Notify/edit_order.html?id='.$id.'&uid='.$uid);

        Gateway::$registerAddress = '127.0.0.1:1238';
        Gateway::sendToGroup($id, json_encode(['type'=>'carry',]));
        return ['code'=>'0000','msg'=>$msg];

        //Db::



    }
  //订单作废收款账号自动关闭基数减1
    public function order_obsolete(){
   
        $order_id = input('order_id');
        $order_data = Db::table('mch_order')->where('id',$order_id)->limit(1)->find();
        if($order_data['pay_status'] == 3){
            return ['code'=>'1111','msg'=>'该笔订单已作废'];
        }

        $bool1 = Db::table('mch_order')->where('id',$order_id)->update(['pay_status'=>3]);
        $bool2 = Db::table('top_account_assets')->where('id',$order_data['pay_type'])->setDec('receipt');
        if($bool1&&$bool2){
			Gateway::$registerAddress = '127.0.0.1:1238';
  			Gateway::sendToGroup($order_id, json_encode(['type'=>'drop']));
            return ['code'=>'0000','msg'=>'作废成功'];
        }else{
            return ['code'=>'1111','msg'=>'作废失败，请稍后再试'];
        }


    } 
  
  


}